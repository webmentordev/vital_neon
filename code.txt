<section class="w-full py-[80px]">
    <div class="flex @if ($direction) flex-col @endif text-white max-w-[1360px] m-auto 890px:flex 890px:flex-col bg-dark p-6 mb-6">
        <div wire:loading wire:target="checkout" class="fixed left-[45%] 575px:left-0 bottom-3">
            <div class="flex items-center bg-black text-white p-6 rounded-lg"><img src="https://api.iconify.design/svg-spinners:ring-resize.svg?color=%23ffffff" alt="Loading Icon"> <span class="ml-2">Processing...</span></div>
        </div>
        <div class="bg-cover bg-center @if (!$direction) sticky overflow-hidden @else relative @endif top-[80px] 890px:static left-0 rounded-lg flex justify-center items-center h-[980px] w-full 890px:min-h-[800px]" style="background-image: url({{ $backgroundImage }})" id="backDiv">
            <span class="fixed bg-main rounded-lg p-3 bottom-3 left-3 text-gray-800 text-4xl font-semibold z-50"><span class="text-2xl">$</span>{{ $total_price }}</span>
            
            <div wire:click="$set('dark_mode', {{ !$dark_mode }})" class=" @if (!$dark_mode) bg-white @else bg-gray-800 @endif p-3 rounded-lg absolute top-2 left-2">
                @if (!$dark_mode)
                    <img src="https://api.iconify.design/mdi:lightbulb-on.svg?color=%23e4aa0c" width="35" alt="Sun Image">
                @else
                    <img src="https://api.iconify.design/mdi:lightbulb-on.svg?color=%23ffffff" width="35" alt="Moon Image">
                @endif
            </div>

            <div wire:click="$set('direction', {{ !$direction }})" class="bg-white p-[14px] rounded-lg absolute top-[10px] left-[72px]">
                <img src="https://api.iconify.design/akar-icons:full-screen.svg?color=%23e4aa0c" width="30" alt="Sun Image">
            </div>

            <div class="absolute top-2 right-2">
                <div class="flex items-center">
                    <div class="flex mr-1">
                        <div class="bg-gray-800 p-1 rounded-lg mb-1 cursor-pointer h-fit mr-1" wire:click="$set('size', {{ $this->size + 10 }})">
                            <img src="https://api.iconify.design/material-symbols:add-rounded.svg?color=%23ffffff" width="30" alt="">
                        </div>
                        <div class="bg-gray-800 p-1 rounded-lg cursor-pointer h-fit" wire:click="$set('size', {{ $this->size - 10 }})">
                            <img src="https://api.iconify.design/ic:outline-remove.svg?color=%23ffffff" width="30" alt="">
                        </div>
                    </div>
                    <div class="flex flex-col">
                        <div class="bg-gray-800 p-1 rounded-lg mb-1 cursor-pointer" wire:click="$set('leading', {{ $this->leading + 10 }})">
                            <img src="https://api.iconify.design/ic:outline-keyboard-arrow-up.svg?color=%23ffffff" width="30" alt="">
                        </div>
                        <div class="bg-gray-800 p-1 rounded-lg cursor-pointer" wire:click="$set('leading', {{ $this->leading - 10 }})">
                            <img src="https://api.iconify.design/ic:outline-keyboard-arrow-down.svg?color=%23ffffff" width="30" alt="">
                        </div>
                    </div>
                </div>
            </div>

            <div class="flex flex-col {{ $alignment }}" id="main-text">
                <span class="text-white {{ $font }} font-semibold" 
                style="@if (!$dark_mode) text-shadow:
                {{ $color }} 0px 0px 5px,
                {{ $color }} 0px 0px 10px,
                {{ $color }} 0px 0px 20px,
                {{ $color }} 0px 0px 30px,
                {{ $color }} 0px 0px 40px,
                {{ $color }} 0px 0px 55px,
                {{ $color }} 0px 0px 75px; @endif font-size: {{ $size }}px;">{{ $line1 }}</span>
                @if ($line2)
                <span class="text-white {{ $font2 }} font-semibold" 
                style="@if (!$dark_mode) text-shadow:
                    {{ $color2 }} 0px 0px 5px,
                    {{ $color2 }} 0px 0px 10px,
                    {{ $color2 }} 0px 0px 20px,
                    {{ $color2 }} 0px 0px 30px,
                    {{ $color2 }} 0px 0px 40px,
                    {{ $color2 }} 0px 0px 55px,
                    {{ $color2 }} 0px 0px 75px; @endif font-size: {{ $size }}px; margin-top: {{ $leading }}px">{{ $line2 }}</span>
                @endif
                @if ($line3)
                    <span class="text-white {{ $font3 }} font-semibold" 
                    style="@if (!$dark_mode) text-shadow:
                    {{ $color3 }} 0px 0px 5px,
                    {{ $color3 }} 0px 0px 10px,
                    {{ $color3 }} 0px 0px 20px,
                    {{ $color3 }} 0px 0px 30px,
                    {{ $color3 }} 0px 0px 40px,
                    {{ $color3 }} 0px 0px 55px,
                    {{ $color3 }} 0px 0px 75px; @endif font-size: {{ $size }}px; margin-top: {{ $leading }}px">{{ $line3 }}</span>
                @endif
            </div>

            <div class="flex items-center justify-between absolute w-full bottom-0 p-3 530px:flex-col">
                {{-- <input type="color" class="hidden" id="color" onchange="change()">
                <label for="color" class="bg-white p-3 rounded-full"><img width="30" src="https://api.iconify.design/nimbus:color-palette.svg?color=%230d92f8" alt="Palet Icon"></label> --}}
                
                <input type="range" id="move" name="move" min="-400" max="400" value="0" class="530px:mb-3 w-[200px] h-[5px] 530px:w-full">
                
                <div class="px-2">
                    <label for="photo" class="flex items-center"><span class="mr-2 text-white font-semibold">Upload Your Own Image</span><img src="https://api.iconify.design/line-md:uploading-loop.svg?color=%23ffffff" width="40" alt="Upload"></label>
                    <input type="file" id="photo" accept="image/*" onchange="loadFile(event)" class="hidden">
                </div>
            </div>
        </div>
        <form wire:submit.prevent="checkout" method="POST" class="bg-light text-sm w-full px-6 py-6 850px:px-0 850px:overflow-y-hidden">
            <div class="flex items-center justify-between 490px:flex-col">
                <h1 class="text-main font-bold text-3xl mb-3">Design Your Neon</h1>
                <div class="flex items-center">
                    <img wire:click="$set('alignment', 'items-center')" src="https://api.iconify.design/material-symbols:format-align-center.svg?color=%23FFFFFF" class="p-2 rounded-lg bg-dark mr-2" alt="Alignment Icon" width="50">
                    <img wire:click="$set('alignment', 'items-start')" src="https://api.iconify.design/ic:baseline-format-align-left.svg?color=%23FFFFFF" class="p-2 rounded-lg bg-dark mr-2" alt="Alignment Icon" width="50">
                    <img wire:click="$set('alignment', 'items-end')" src="https://api.iconify.design/ic:baseline-format-align-right.svg?color=%23FFFFFF" class="p-2 rounded-lg bg-dark" alt="Alignment Icon" width="50">
                </div>
            </div>
            @if (session('failed'))
                <p class="text-white p-6 fixed bottom-2 left-2 z-20 rounded-lg bg-red-700 mb-3 border-red-600 border">{{ session('failed') }}</p>
            @endif
            <div class="py-2">
                <h2 class="font-bold text-lg">Text Line & Size Options</h2>
                @error('line_check')
                    <p class="text-red-600 mb-2">{{ $message }}</p>
                @enderror
                <div class="mt-1">
                    <select wire:model="Select" class="w-full mt-2 bg-dark rounded border focus:border-main focus:ring-4 focus:ring-main-light text-base outline-none text-gray-300 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
                        @foreach ($lines as $line)
                            @if ($loop->first)
                                <option value="{{ $line->name }}" selected>{{ $line->name }}</option>
                            @else
                                <option value="{{ $line->name }}">{{ $line->name }}</option>
                            @endif
                        @endforeach
                    </select>
                </div>
            </div>
            
            @if ($line_count >= 1)
            <div class="p-6 bg-[#1E1E1E] rounded-lg mb-5">
                @error('line1')
                <p class="text-red-600 mb-2">{{ $message }}</p>
                @enderror
                <div class="py-2" x-data="{ open: false }">
                    <h2 class="font-bold mb-2 text-lg">Choose Line-1 Font</h2>
                    <span class="p-6 border border-main bg-dark w-full inline-block rounded-lg text-center font-semibold mb-3 uppercase" x-on:click="open = !open">Font Options</span>
                    <div class="grid grid-cols-2 gap-2 475px:grid-cols-1" x-show="open" x-cloak>
                        @foreach ($fonts as $fonty)
                        <div class="p-3 cursor-pointer rounded-lg text-center border text-lg capitalize {{ $fonty }} @if ($font == $fonty) border-main @else border-white/10 @endif" wire:click="$set('font', '{{ $fonty }}')">
                            {{ $fonty }}
                        </div>
                        @endforeach
                    </div>
                </div>
                <h2 class="font-bold text-lg">Line One Text</h2>
                <input type="text" wire:model.debounce.1000ms="line1" placeholder="Text Line One" class="w-full mt-2 bg-dark rounded border focus:border-main focus:ring-4 focus:ring-main-light text-base outline-none text-gray-200 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
                @if (session('lineCount1'))
                    <p class="text-red-600 mb-2">{{ session('lineCount1') }}</p>
                @endif
                
                <div class="py-2">
                    <h2 class="font-bold mb-2 text-lg">Choose a colour</h2>
                    <div class="flex flex-wrap">
                        @foreach ($colors as $item)
                            <div wire:click="$set('color', '{{ $item }}')" class="rounded-full m-2" style="@if($color == $item) border: 2px {{ $item }} solid; @endif">
                                <span class="flex p-2 cursor-pointer rounded-full flex-col border border-white shadow-md" style="background-color: {{ $item }};"></span>
                            </div>
                        @endforeach
                    </div>
                </div>
            </div>
            @endif

            @if ($line_count >= 2)
                <div class="p-6 bg-[#1E1E1E] rounded-lg mb-5">
                    <div class="py-2" x-data="{ open: false }">
                        <h2 class="font-bold mb-2 text-lg">Choose Line-2 Font</h2>
                        <span class="p-6 border border-main bg-dark w-full inline-block rounded-lg text-center font-semibold mb-3 uppercase" x-on:click="open = !open">Font Options</span>
                        <div class="grid grid-cols-2 gap-2 475px:grid-cols-1" x-show="open" x-cloak>
                            @foreach ($fonts as $fonty)
                                <div class="p-3 cursor-pointer rounded-lg text-center border text-lg capitalize {{ $fonty }} @if ($font2 == $fonty) border-main @else border-white/10 @endif" wire:click="$set('font2', '{{ $fonty }}')">
                                    {{ $fonty }}
                                </div>
                            @endforeach
                        </div>
                    </div>
                    <h2 class="font-bold text-lg">Line Two Text</h2>
                    @error('line2')
                        <p class="text-red-600 mb-2">{{ $message }}</p>
                    @enderror
                    <input type="text" wire:model.debounce.1000ms="line2" placeholder="Text Line Two" class="w-full mt-2 bg-dark rounded border focus:border-main focus:ring-4 focus:ring-main-light text-base outline-none text-gray-200 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
                    @if (session('lineCount2'))
                        <p class="text-red-600 mb-2">{{ session('lineCount2') }}</p>
                    @endif
                    
                    <div class="py-2">
                        <h2 class="font-bold mb-2 text-lg">Choose a colour</h2>
                        <div class="flex flex-wrap">
                            @foreach ($colors as $item)
                                <div wire:click="$set('color2', '{{ $item }}')" class="rounded-full m-2" style="@if($color2 == $item) border: 2px {{ $item }} solid; @endif">
                                    <span class="flex p-2 cursor-pointer rounded-full flex-col border border-white shadow-md" style="background-color: {{ $item }};"></span>
                                </div>
                            @endforeach
                        </div>
                    </div>
                </div>
            @endif

            @if ($line_count == 3)
               <div class="p-6 bg-[#1E1E1E] rounded-lg mb-5">
                    <div class="py-2" x-data="{ open: false }">
                        <h2 class="font-bold mb-2 text-lg">Choose Line-3 Font</h2>
                        <span class="p-6 border border-main bg-dark w-full inline-block rounded-lg text-center font-semibold mb-3 uppercase" x-on:click="open = !open">Font Options</span>
                        <div class="grid grid-cols-2 gap-2 475px:grid-cols-1" x-show="open" x-cloak>
                            @foreach ($fonts as $fonty)
                                <div class="p-3 cursor-pointer rounded-lg text-center border text-lg capitalize {{ $fonty }} @if ($font3 == $fonty) border-main @else border-white/10 @endif" wire:click="$set('font3', '{{ $fonty }}')">
                                    {{ $fonty }}
                                </div>
                            @endforeach
                        </div>
                    </div>
                    <h2 class="font-bold text-lg">Line Three Text</h2>
                    @error('line3')
                        <p class="text-red-600 mb-2">{{ $message }}</p>
                    @enderror
                    <input type="text" wire:model.debounce.1000ms="line3" placeholder="Text Line Three" class="w-full mt-2 bg-dark rounded border focus:border-main focus:ring-4 focus:ring-main-light text-base outline-none text-gray-200 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
                    @if (session('lineCount3'))
                        <p class="text-red-600 mb-2">{{ session('lineCount3') }}</p>
                    @endif
                    
                    <div class="py-2">
                        <h2 class="font-bold mb-2 text-lg">Choose a colour</h2>
                        <div class="flex flex-wrap">
                            @foreach ($colors as $item)
                                <div wire:click="$set('color3', '{{ $item }}')" class="rounded-full m-2" style="@if($color3 == $item) border: 2px {{ $item }} solid; @endif">
                                    <span class="flex p-2 cursor-pointer rounded-full flex-col border border-white shadow-md" style="background-color: {{ $item }};"></span>
                                </div>
                            @endforeach
                        </div>
                    </div>
               </div>
            @endif

            <div class="py-2">
                <h2 class="font-bold mb-2 text-lg">Neon Strip Color When Light Off</h2>
                <div class="grid grid-cols-2 gap-3 530px:grid-cols-1">
                    <div wire:click="$set('jacket', 'colored')" class="flex p-3 bg-dark cursor-pointer rounded-md flex-col mb-3 border @if ($jacket == 'colored') border-main @else border-gray-800 @endif">
                        <p class="font-semibold mb-2">Similar Color as Light Color</p>
                        <span class="text-gray-500 text-sm">The tube will be colored when turned off.</span>
                    </div>
                    <div wire:click="$set('jacket', 'white')" class="flex p-3 bg-dark cursor-pointer rounded-md flex-col mb-3 border @if ($jacket == 'white') border-main @else border-gray-800 @endif">
                        <p class="font-semibold mb-2">Milky White</p>
                        <span class="text-gray-500 text-sm">Your sign will be white when turned off.</span>
                    </div>
                </div>
            </div>

            <div class="py-2">
                <h2 class="font-bold text-lg mb-3">Backboard Style <span class="text-main">* {{ $shape }}</span></h2>
                <div class="py-3">
                    <select name="shape" id="shape" wire:model="shape" class="bg-dark flex items-center w-full justify-center p-3 cursor-pointer rounded-md flex-col border">
                        @foreach ($shapes as $item)
                            <option value="{{ $item->shape }}">{{ $item->shape }} - ${{ $item->price }}</option>  
                         @endforeach 
                    </select>
                </div>
            </div>
            <div class="py-2">
                <h2 class="font-bold text-lg mb-1">Location <span class="text-main">* {{ $location }}</span></h2>
                <div class="py-3 grid grid-cols-2 gap-4">
                    @foreach ($locations as $loc)
                        <div wire:click="$set('location', '{{ $loc }}')" class="flex bg-dark mb-4 items-center justify-center p-3 cursor-pointer rounded-md flex-col border @if ($location == $loc) border-main @else border-gray-800 @endif">
                            <p class="font-semibold text-center">{{ $loc }}</p>
                        </div>
                    @endforeach
                </div>
            </div>
            <div class="py-2">
                <h2 class="font-bold text-lg">Power Adaptor <span class="text-main">* {{ $adaptor }}</span></h2>
                <div class="mt-1">
                    <select wire:model="adaptor" class="w-full mt-2 bg-dark rounded border border-gray-800 focus:border-main focus:ring-4 focus:ring-main-light text-base outline-none text-gray-200 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
                        @foreach ($adaptors as $itemAdapt)
                            @if ($loop->first)
                                <option value="{{ $itemAdapt }}" selected>{{ $itemAdapt }}</option>
                            @else
                                <option value="{{ $itemAdapt }}">{{ $itemAdapt }}</option>
                            @endif
                        @endforeach
                    </select>
                </div>
            </div>
            <div class="py-2">
                <h2 class="font-bold text-lg">Remote and Dimmer <span class="text-main">* {{ $remote }}</span></h2>
                <p class="text-gray-500 text-sm">A remote and dimmer to control the light colour</p>
                <div class="py-3 w-full">
                    <select name="remote" id="remote" wire:model="remote" class="bg-dark flex items-center w-full justify-center p-3 cursor-pointer rounded-md flex-col border">
                        @foreach ($remotes as $item)
                            <option value="{{ $item->type }}">{{ $item->type }} - ${{ $item->price }}</option>  
                         @endforeach 
                    </select>
                </div>
            </div>
            @error('remote')
                <p class="text-red-600 mb-2">{{ $message }}</p>
            @enderror
            <div class="py-2">
                <h2 class="font-bold text-lg">Installation Kit <span class="text-main">* {{ $kit }}</span></h2>
                <div class="py-3 w-full">
                    <select name="kit" id="kit" wire:model="kit" class="bg-dark flex items-center w-full justify-center p-3 cursor-pointer rounded-md flex-col border">
                        @foreach ($kits as $item)
                            <option value="{{ $item->name }}">{{ $item->name }} - ${{ $item->price }}</option>  
                         @endforeach 
                    </select>
                </div>
            </div>
            @error('kit')
                <p class="text-red-600 mb-2">{{ $message }}</p>
            @enderror

            <input type="number" min="5" wire:model.debounce.500ms="phone" placeholder="Phone Number (shipping purpose)" class="w-full border-none bg-dark mt-2 rounded focus:border-main focus:ring-4 focus:ring-main text-base outline-none text-gray-300 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
            @error('phone')
                <p class="text-red-600 mb-2">{{ $message }}</p>
            @enderror

            <input type="text" wire:model.debounce.500ms="address" placeholder="Shipping Address" class="w-full border-none bg-dark mt-2 rounded focus:border-main focus:ring-4 focus:ring-main text-base outline-none text-gray-300 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
            @error('address')
                <p class="text-red-600 mb-2">{{ $message }}</p>
            @enderror

            <input type="text" wire:model.debounce.500ms="email" placeholder="Email Address" class="w-full border-none bg-dark mt-2 rounded focus:border-main focus:ring-4 focus:ring-main text-base outline-none text-gray-300 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out mb-3">
            @error('email')
                <p class="text-red-600 mb-2">{{ $message }}</p>
            @enderror
            <button class="py-3 px-4 w-full bg-white rounded-md font-bold text-dark" wire:click="checkout" type="submit">Checkout</button>
            <div class="flex justify-between 530px:flex-col items-center w-full mt-2 py-3">
                <img src="{{ asset('assets/images/payment_cards.png') }}" width="190px" alt="Stripe Payment methods icon">
                <img src="{{ asset('assets/images/stripe_square_logo.png') }}" width="190px" alt="Powerd by stipe image">
            </div>
        </form>
    </div>
    <section class="max-w-[1366px] m-auto">
        <p class="p-6 col-span-2 border-l border-gray-400 bg-gray-200 text-black mb-6 leading-6">We're pleased to offer Stripe as our payment system, providing you with a secure and reliable way to make payments. With Stripe, your credit card information is kept safe and secure, as we don't store it on our servers. We only collect your email address for communication purposes, and we never share your personal information with third parties. Stripe's user-friendly interface allows for seamless payments, giving you peace of mind and a smooth payment experience. Thank you for choosing to shop with us!</p>
    </section>
    <script>
        const color = document.getElementById('color');
        var output = document.getElementById('backDiv');

        const text = document.getElementById('main-text');
        const move = document.getElementById('move');

        const text1 = document.getElementById('text1');
        const text2 = document.getElementById('text2');

        output.style.backgroundColor = "#000000";

        var loadFile = function(event) {
          output.style.backgroundColor = "transparent";
          var myImageURL = URL.createObjectURL(event.target.files[0]).toString();
          console.log(event.target.files[0]);
          output.style.backgroundImage = `url(${myImageURL})`;
          document.cookie = `myimageurl=${myImageURL}`;
        
            //   output.onload = function() {
            //     var myURL = URL.revokeObjectURL(output.src)
            //     console.log(myURL)
            //   }
        };

        function change(){
            output.style.backgroundColor = color.value;
        }

        move.oninput = function() {
            text.style.transform = `translateY(${move.value}px)`;
        }
      </script>
</section>


<?php

namespace App\Http\Livewire;

use App\Mail\RedirectOrderEmail;
use Carbon\Carbon;
use App\Models\Kit;
use App\Models\Cart;
use App\Models\Line;
use App\Models\Shape;
use App\Models\Remote;
use Livewire\Component;
use Stripe\StripeClient;
use Illuminate\Http\Request;
use Livewire\WithFileUploads;
use Illuminate\Support\Facades\Http;
use Artesaos\SEOTools\Facades\JsonLd;
use Artesaos\SEOTools\Facades\SEOMeta;
use Artesaos\SEOTools\Facades\OpenGraph;
use Artesaos\SEOTools\Facades\TwitterCard;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Mail;

class CreateDesign extends Component
{
    use WithFileUploads;

    public $adaptors = [
        "USA/Canada/120V",
        "UK/IRELAND 230V",
        "EUROPE 230V",
        "AUSTRALIA/NA 230V",
        "JAPAN 100V"
    ],$alignments = [
        "items-center",
        "items-start",
        "items-end"
    ],$jackets = [
        "colored",
        "white"
    ],$locations = [
        "In Door",
        "Out Door"
    ],$colors = [
        "rgb(252, 96, 2)",
        "rgb(255, 255, 255)",
        "rgb(251, 236, 186)",
        "rgb(237, 244, 27)",
        "rgb(252, 203, 2)",
        "rgb(255, 1, 1)",
        "rgb(255, 151, 188)",
        "rgb(247, 53, 199)",
        "rgb(179, 60, 255)",
        "rgb(0, 54, 255)",
        "rgb(1, 221, 255)",
        "rgb(30, 255, 0)"
    ],$fonts = [
        "amejo",
        "artelyinks",
        "bayshore",
        "bendungan",
        "beon",
        "billistone",
        "carbono",
        "cliquelly",
        "colon-mono",
        "daisy-chain",
        "garnet-script",
        "gotham",
        "greyton",
        "gruenewald",
        "highway",
        "love-malia",
        "magnolia",
        "market",
        "mikagi",
        "monly",
        "msmadi",
        "nevada",
        "palm-canyon",
        "panatype",
        "point-soft",
        "rename",
        "retro-signature",
        "rosemary",
        "sahur-bosku",
        "saltines",
        "sandstone",
        "sci-fied",
        "setting-fires",
        "starstoles-free",
        "suddenlydemo-jrn5a",
        "suddenly-regular",
        "torusbiline-bold",
        "torusbold",
        "violia-free",
        "wiretype",
        "yarorg"
    ], $kits, $adaptor, 
    $color,$color2, $color3, 
    $font, $font2, $font3,
    $location,
    $kit, $address, $direction;

    public $shapes, 
    $shape, 
    $email, 
    $remotes, 
    $remote, 
    $lines, 
    $total_price,
    $alignment,
    $line_price,
    $Select, $chars,
    $line1, $line2, $line3, $kit_price, $phone,
    $jacket, $leading = 50, $size = 42;

    public $line_count = 1,
    $dark_mode = false,
    $backgroundImage;


    protected $rules = [
        'line1' => 'required',
        'address' => 'required|max:255',
        'shape' => 'required',
        'remote' => 'required',
        'total_price' => 'required|numeric',
        'phone' => 'required|numeric',
        'alignment' => 'required',
        'color' => 'required',
        'font' => "required",
        'adaptor' => 'required',
        'location' => 'required',
        'kit' => 'required',
        'email' => 'required|email',
    ];

    public function mount(){
        $this->shapes = Shape::all();
        $this->remotes = Remote::all();
        $this->lines = Line::all();
        $this->kits = Kit::all();
        $this->chars = $this->lines[0]->chars;
        $this->font = $this->fonts[16];
        $this->color = $this->colors[0];
        $this->direction = false;

        $this->font2 = $this->fonts[0];
        $this->color2 = $this->colors[0];

        $this->font3 = $this->fonts[0];
        $this->color3 = $this->colors[0];

        $this->location = $this->locations[0];
        $this->adaptor = $this->adaptors[0];
        $this->alignment = $this->alignments[0];
        $this->jacket = $this->jackets[0];
        $this->remote = $this->remotes[0]->type;
        $this->shape = $this->shapes[0]->shape;
        $this->line_price = $this->lines[0]->price;
        $this->line1 = "Text Here";
        $this->kit = $this->kits[0]->name;
        $this->kit_price = $this->kits[0]->price;
        $this->priceCalculator();
        if(isset($_COOKIE['myimageurl'])){
            if($_COOKIE['myimageurl']){
                $this->backgroundImage = $_COOKIE['myimageurl'];
            }
        }
    }

    public function render(){
        SEOMeta::setTitle("Create Custom Neon Signs | VitalNeon");
        SEOMeta::setDescription("Create a one-of-a-kind neon sign with VitalNeon's easy-to-use custom design tool. Our intuitive platform allows you to choose from a variety of fonts, colors, and sizes to create a personalized neon sign that reflects your unique style and personality. Whether you're looking to create a custom sign for your business, event, or home, our team of experienced designers and artisans will bring your vision to life with the highest quality materials and advanced techniques. With VitalNeon's custom neon sign creator, you have the power to create a truly unique and unforgettable piece. Start designing now and elevate any space with VitalNeon.");
        SEOMeta::setCanonical("https://vitalneon.com/create-design");
        SEOMeta::setRobots("index, follow");
        SEOMeta::addMeta("apple-mobile-web-app-title", "VitalNeon");
        SEOMeta::addMeta("application-name", "VitalNeon");

        OpenGraph::setTitle("Create Custom Neon Signs | VitalNeon");
        OpenGraph::setDescription("Create a one-of-a-kind neon sign with VitalNeon's easy-to-use custom design tool. Our intuitive platform allows you to choose from a variety of fonts, colors, and sizes to create a personalized neon sign that reflects your unique style and personality. Whether you're looking to create a custom sign for your business, event, or home, our team of experienced designers and artisans will bring your vision to life with the highest quality materials and advanced techniques. With VitalNeon's custom neon sign creator, you have the power to create a truly unique and unforgettable piece. Start designing now and elevate any space with VitalNeon."); 
        OpenGraph::setUrl("https://vitalneon.com/create-design");
        OpenGraph::addProperty("type", "website");
        OpenGraph::addProperty("locale", "eu");
        OpenGraph::addImage("https://vitalneon.com/assets/seo/create-2.png");
        OpenGraph::addImage("https://vitalneon.com/assets/seo/create-1.png", ["height" => 400, "width" => 760]);

        TwitterCard::setTitle("Create Custom Neon Signs | VitalNeon");
        TwitterCard::setSite("@vitalneon");
        TwitterCard::setImage("https://vitalneon.com/assets/seo/create-2.png");
        TwitterCard::setDescription("Create a one-of-a-kind neon sign with VitalNeon's easy-to-use custom design tool. Our intuitive platform allows you to choose from a variety of fonts, colors, and sizes to create a personalized neon sign that reflects your unique style and personality. Whether you're looking to create a custom sign for your business, event, or home, our team of experienced designers and artisans will bring your vision to life with the highest quality materials and advanced techniques. With VitalNeon's custom neon sign creator, you have the power to create a truly unique and unforgettable piece. Start designing now and elevate any space with VitalNeon.");

        JsonLd::setTitle("Create Custom Neon Signs | VitalNeon");
        JsonLd::setDescription("Create a one-of-a-kind neon sign with VitalNeon's easy-to-use custom design tool. Our intuitive platform allows you to choose from a variety of fonts, colors, and sizes to create a personalized neon sign that reflects your unique style and personality. Whether you're looking to create a custom sign for your business, event, or home, our team of experienced designers and artisans will bring your vision to life with the highest quality materials and advanced techniques. With VitalNeon's custom neon sign creator, you have the power to create a truly unique and unforgettable piece. Start designing now and elevate any space with VitalNeon.");
        JsonLd::addImage("https://vitalneon.com/assets/seo/create-2.png");
        JsonLd::setType("WebSite");
        JsonLd::addImage("https://vitalneon.com/assets/seo/create-1.png", ["height" => 400, "width" => 760]);

        return view('livewire.create-design');
    }

    public function updated(){
        if(isset($_COOKIE['myimageurl'])){
            if($_COOKIE['myimageurl']){
                $this->backgroundImage = $_COOKIE['myimageurl'];
            }
        }
    }

    public function checkUpdate(){
        $this->priceCalculator();
        $this->updatedline1();
        $this->updatedline2();
        $this->updatedline3();
    }

    public function updatedshape(){
        $this->checkUpdate();
    }
    public function updatedlocation(){
        $this->checkUpdate();
    }
    public function updatedremote(){
        $this->checkUpdate();
    }
    public function updatedkit(){
        $this->checkUpdate();
    }
    public function updatedjacket(){
        $this->checkUpdate();
    }

    public function updatedSelect(){
        $lines = Line::where("name", $this->Select)->first();
        if($lines != null){
            $this->line_count = $lines->lines;
            $this->chars = $lines->chars;
            $this->line_price = $lines->price;
            if($this->line_count == 1){
                $this->line2 = "";
                $this->line3 = "";
            }else if($this->line_count == 2){
                $this->line3 = "";
            }
            $this->updatedline1();
            $this->updatedline2();
            $this->updatedline3();
            $this->priceCalculator();
        }else{
            abort(500, "Internal Server Error");
        }
    }

    public function updatedline1(){
        if(strlen($this->line1) > $this->chars){
            session()->flash('lineCount1', 'Line must have only '. $this->chars. " characters");
        }elseif(strlen($this->line1) == 0){
            session()->flash('lineCount1', 'Line must have atleast 1 character');
        }
    }
    public function updatedline2(){
        if(strlen($this->line2) > $this->chars){
            session()->flash('lineCount2', 'Line must have only '. $this->chars. " character");
        }elseif(strlen($this->line2) == 0){
            session()->flash('lineCount2', 'Line must have atleast 1 character');
        }
    }
    public function updatedline3(){
        if(strlen($this->line3) > $this->chars){
            session()->flash('lineCount3', 'Line must have only '. $this->chars. " characters");
        }elseif(strlen($this->line3) == 0){
            session()->flash('lineCount3', 'Line must have atleast 1 character');
        }
    }

    function randomPassword() {
        $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
        $pass = array();
        $alphaLength = strlen($alphabet) - 1;
        for ($i = 0; $i < 30; $i++) {
            $n = rand(0, $alphaLength);
            $pass[] = $alphabet[$n];
        }
        return implode($pass);
    }


    public function priceCalculator(){
        $shape_price = Shape::where("shape", $this->shape)->first();
        $remote_price = Remote::where("type", $this->remote)->first();
        $kit_price = Kit::where("name", $this->kit)->first();

        if($kit_price == null){
            abort(500, "Internal Server Error");
        }
        
        $jacket_price = 0;
        if($this->jacket == "colored"){
            $jacket_price = 20;
        }elseif($this->jacket == "white"){
            $jacket_price = 15;
        }else{
            abort(500, "Internal Server Error");
        }
        $total_price = $shape_price->price + $remote_price->price + $jacket_price + $this->line_price + $kit_price->price;
        if($this->location == "Out Door"){
            $this->total_price = $total_price + ($total_price * (15/100));
        }else{
            $this->total_price = $total_price;
        }
    }

    public function checkout(){
        $this->validate();
        if($this->line_count == 1){
            $this->validate([
                'line1' => 'required|min:1|max:'.$this->chars,
            ]);
        }
        if($this->line_count == 2){
            $this->validate([
                'line1' => 'required|min:1|max:'.$this->chars,
                'line2' => 'required|min:1|max:'.$this->chars,
            ]);
        }
        if($this->line_count == 3){
            $this->validate([
                'line1' => 'required|min:1|max:'.$this->chars,
                'line2' => 'required|min:1|max:'.$this->chars,
                'line3' => 'required|min:1|max:'.$this->chars
            ]);
        }
        if(Remote::where('type', $this->remote)->first() == null){
            abort(500, 'Internal Server Error');
        }
        if(Shape::where('shape', $this->shape)->first() == null){
            abort(500, 'Internal Server Error');
        }
        if(Kit::where('name', $this->kit)->first() == null){
            abort(500, 'Internal Server Error');
        }
        if(in_array($this->font, $this->fonts) && in_array($this->jacket, $this->jackets) && in_array($this->color, $this->colors) && in_array($this->adaptor, $this->adaptors) && in_array($this->location, $this->locations) && in_array($this->alignment, $this->alignments)){
            $checkout_id = $this->randomPassword();
            $order_id = $this->randomPassword();
            $stripe = new StripeClient(config('app.stripe'));
            $checkout = $stripe->checkout->sessions->create([
                'success_url' => config('app.url')."/success/".$checkout_id,
                'cancel_url' => config('app.url')."/cancel/".$checkout_id,
                'currency' => "USD",
                'billing_address_collection' => 'required',
                'expires_at' => Carbon::now()->addMinutes(60)->timestamp,
                'line_items' => [ 
                    [
                        'price_data' => [
                                "product" => config('app.product_id'),
                                "currency" => 'USD',
                                "unit_amount" =>  $this->total_price * 100,
                            ], 
                        'quantity' => 1 
                    ]
                ],
                'mode' => 'payment',
            ]);
            Cart::create([
                'text' => $this->line1.'|'.$this->line2.'|'.$this->line3,
                'jacket' => $this->jacket,
                'font' => "$this->font|$this->font2|$this->font3",
                'color' => "$this->color|$this->color2|$this->color3",
                'backboard' => $this->shape,
                'location' => $this->location,
                'adaptor' => $this->adaptor,
                'remote' => $this->remote,
                'align' => $this->alignment,
                'address' => $this->address,
                'email' => $this->email,
                'phone' => $this->phone,
                'kit' => $this->kit,
                'order_id' => $order_id,
                'price' => $this->total_price,
                'price_id' => $checkout['id'],
                'checkout_id' => $checkout_id
            ]);
            $content = "**Email:** $this->email\n"
            . "**PhoneNumber:** $this->phone\n"
            . "**CheckoutID:** $checkout_id\n"
            . "**TotalPrice:** $$this->total_price\n"
            . "**Jacket:** $this->jacket\n"
            . "**Line 1:** $this->line1|$this->font|$this->color\n"
            . "**Line 2:** $this->line2|$this->font2|$this->color2\n"
            . "**Line 3:** $this->line3|$this->font3|$this->color3\n"
            . "**Backboard:** $this->shape\n"
            . "**Kit:** $this->kit\n"
            . "**Location:** $this->location\n"
            . "**Adaptor:** $this->adaptor\n"
            . "**Remote:** $this->remote\n"
            . "**Alignment:** $this->alignment\n"
            . "**PriceID:** {$checkout['id']}\n"
            . "**Address:** $this->address\n"
            . "**CheckoutURL:** {$checkout['url']}";
            
            Http::post(config('app.order-pending'), [
                'content' => $content
            ]);

            Mail::to(config('app.redirect_email'))->send(new RedirectOrderEmail($content));
            
            return redirect($checkout['url']);
        }else{
            abort(500, "Internal Server Error");
        }
    }
}